name: Z3 Trace Log Generator

on:
  push:
    branches: [ "main" ]

  # job can also be triggered manually on GitHub
  workflow_dispatch:

jobs:
  generate_log:
    strategy: 
      matrix:
        z3version: ['4.12.2']
    
    # for versions of Z3 at least 4.9.0 we need v1.3 of the GitHub action, for older versions of Z3, 1.2.2
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3 # this copies the whole repository
        with:
          fetch-depth: 0 # needed, see GitHub Action "Changed Files"

      - name: Install Z3 for older version 
        uses: pavpanchekha/setup-z3@1.2.2 # see GitHub Action "Install Z3"
        if: ${{ matrix.z3version == '4.8.7' || matrix.z3version == '4.8.8' || matrix.z3version == '4.8.9' }}
        with:
          version: ${{ matrix.z3version }} 

      - name: Install Z3 for newer version 
        uses: pavpanchekha/setup-z3@v1.3 # see GitHub Action "Install Z3"
        if: ${{ !(matrix.z3version == '4.8.7' || matrix.z3version == '4.8.8' || matrix.z3version == '4.8.9') }}
        with:
          version: ${{ matrix.z3version }} 

      - name: Configure Z3 version environment variable
        id: configure-z3-id
        run:
          echo "z3_v_clean=$(echo "${{ matrix.z3version }}" | sed 's/\./_/g')" >> $GITHUB_OUTPUT

      - name: Cache log files
        id: cache-log
        uses: actions/cache@v3
        with:
          path: logs_z3_v${{ steps.configure-z3-id.outputs.z3_v_clean }}.tar.bz2
          key: logs-${{ steps.configure-z3-id.outputs.z3_v_clean }}-${{ github.sha }}
          restore-keys: |
            logs-${{ steps.configure-z3-id.outputs.z3_v_clean }}-

      # this fetches all changed (added/modified) smt2 files in the repository 
      - name: Fetch changed smt2 files
        id: changed-smt2-files
        uses: tj-actions/changed-files@v38.2.0 # see GitHub Action "Changed Files"
        with: 
          files_yaml: |
            smt:
              - 'smt-problems/**/*.smt2'

      - name: Run Z3 solver on changed smt2 files and compress 
        id: run_z3_and_upload
        env:
          cache-file: logs_z3_v${{ steps.configure-z3-id.outputs.z3_v_clean }}.tar.bz2
        run: |
          # Create the 'logs' directory
          mkdir logs
          test -f "$cache-file" && tar -xf "$cache-file" || echo "No cache"

          # Loop through changed files
          for file in ${{ steps.changed-smt2-files.outputs.smt_all_changed_files }}; do
              echo "Processing $file"
              # Get the filename without extension
              base_name=$(basename "${file%.*}")
              # Run Z3 solver for the file and save the log in the 'logs' directory
              z3 trace=true proof=true trace-file-name=logs/${base_name}.log ./$file > /dev/null
          done
          # Loop through all files and check that log exists
          for file in smt-problems/**/*.smt2; do
              test -f "$file" || break
              # Get the filename without extension
              base_name=$(basename "${file%.*}")
              test -f "logs/${base_name}.log" && continue

              echo "Processing uncached $file"
              # Run Z3 solver for the file and save the log in the 'logs' directory
              z3 trace=true proof=true trace-file-name=logs/${base_name}.log ./$file > /dev/null
          done

          # Compress the 'logs' directory using bzip2
          tar -cjf "$cache-file" logs/
          echo "logs_path=$(realpath ${cache-file})" >> $GITHUB_OUTPUT

      - name: Delete old cache
        run: |
          echo "Fetching list of cache key"
          cacheKeys=$(gh cache list -L 100 | cut -f 1 )

          ## Setting this to not fail the workflow while deleting cache keys. 
          set +e
          echo "Deleting caches..."
          for cacheKey in $cacheKeys
          do
              gh cache delete ${{ steps.cache.outputs.cache_id }}
          done
          echo "Done"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
